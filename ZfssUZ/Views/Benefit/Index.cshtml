@model ZfssUZ.Models.Benefit.BenefitViewListModel

@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.AspNetCore.Identity
@using ZfssUZData.Models.Users
@using ZfssUZ.Enums

@inject IViewLocalizer Localizer
@{
    Context.Items["Title"] = "Lista wniosków";
}

@inject UserManager<ApplicationUser> UserManager

<script src="~/lib/jquery/dist/jquery.js"></script>
<script src="https://cdn.datatables.net/1.10.15/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.10.15/js/dataTables.bootstrap4.min.js "></script>

<h3>@Localizer["BenefitList"]</h3>
<div id="idx" class="container" style="width:165% !important">
    <div>
        <input class="form-control" id="myInput" type="text" style="width:50%;align-items:center" placeholder="@Localizer["Search"]">
        <div class="modal fade" id="rejectionModal" role="dialog" data-url='@Url.Action("OpenRejectionView", "Benefit")'></div>
        <div class="modal fade" id="showBenefitModal" role="dialog" data-url='@Url.Action("Show", "Benefit")'></div>
        <div style="margin-top:10px">
            <input type="button" class="btn btn-default" id="showBenefit" value="@Localizer["Show"]" disabled="disabled" />
            <input type="button" class="btn btn-default" id="editBenefit" value="@Localizer["Edit"]" disabled="disabled" />
            <input type="button" class="btn btn-default" id="deleteBenefit" value="@Localizer["Delete"]" disabled="disabled" />
            @if (UserManager.GetUserAsync(User).Result.UserGroupId != (int)eUserGroup.UzEmpoloyee)
            {
                <input type="button" class="btn btn-default" id="verifyBenefit" value="@Localizer["Verify"]" disabled="disabled" />
                <input type="button" class="btn btn-default" id="acceptBenefit" value="@Localizer["Accept"]" disabled="disabled" />
                <input type="button" class="btn btn-default" id="rejectBenefit" value="@Localizer["Reject"]" disabled="disabled" />
            }
        </div>
        <table class="table table-striped table-bordered dt-responsive nowrap" style="width:100%;" id="benefitTable" cellspacing="0">
            <thead>
                <tr>
                    <th clss="th-sm" style="display:none"></th>
                    <th clss="th-sm" style="display:none"></th>
                    <th clss="th-sm" style="display:none"></th>
                    <th clss="th-sm">@Localizer["BenefitNumber"]</th>
                    <th clss="th-sm">@Localizer["BeneficiaryName"]</th>
                    <th clss="th-sm">@Localizer["BeneficiaryAddress"]</th>
                    <th clss="th-sm">@Localizer["BeneficiaryPhoneNumber"]</th>
                    <th clss="th-sm">@Localizer["BenefitType"]</th>
                    <th clss="th-sm">@Localizer["BenefitStatus"]</th>
                    <th clss="th-sm">@Localizer["SubmittingUser"]</th>
                    <th clss="th-sm">@Localizer["SubmittingDate"]</th>
                    <th clss="th-sm">@Localizer["AcceptingUser"]</th>
                    <th clss="th-sm">@Localizer["AcceptingDate"]</th>
                    <th clss="th-sm">@Localizer["RejectingUser"]</th>
                    <th clss="th-sm">@Localizer["RejectingDate"]</th>
                    <th clss="th-sm">@Localizer["RejectionReason"]</th>
                </tr>
            </thead>
            <tbody id="myTable">
                @{int i = 0;}
                @foreach (var benefitList in Model.BenefitsViewList)
                {
                    <tr id="benefitList@(i)">
                        <td name="benefitId" style="display:none">@benefitList.Id</td>
                        <td name="benefitStatusId" style="display:none">@benefitList.BenefitStatus.Id</td>
                        <td name="benefitTypeId" style="display:none">@benefitList.BenefitType.Id</td>
                        <td>@benefitList.BenefitNumber</td>
                        <td>@benefitList.BeneficiaryName</td>
                        <td>@benefitList.BeneficiaryAddress</td>
                        <td>@benefitList.BeneficiaryPhoneNumber</td>
                        <td>@benefitList.BenefitType.Value</td>
                        <td>@benefitList.BenefitStatus.Value</td>
                        <td>@benefitList.SubmittingUser.Firstname @benefitList.SubmittingUser.LastName</td>
                        <td>@benefitList.SubmittingDate</td>
                        <td>@benefitList.AcceptingUser.Firstname @benefitList.AcceptingUser.LastName</td>
                        <td>@benefitList.AcceptingDate</td>
                        <td>@benefitList.RejectingUser.Firstname @benefitList.RejectingUser.LastName</td>
                        <td>@benefitList.RejectingDate</td>
                        <td>@benefitList.RejectionReason</td>
                    </tr>
                    i++;
                }
            </tbody>
        </table>
    </div>
</div>
@section Scripts {
<script>
    $(document).ready(function () {
        $(".container").css("margin-left", "0px");
        $(".container").css("margin-right", "0px");
        if ("@TempData["BenefitAddSuccess"]" != null && "@TempData["BenefitAddSuccess"]" != "" && "@TempData["BenefitAddSuccess"]" != "Success") {
            alert("Utworzono wniosek o numerze: " + "@TempData["BenefitAddSuccess"]");
        }

        if ("@TempData["Edit"]" != null && "@TempData["Edit"]" != "" && "@TempData["Edit"]" != "None") {
            alert("Zapisano dane wniosku o numerze: " + "@TempData["Edit"]");
        }

        var benefitStatuses = document.getElementsByName("benefitStatusId");
        if (benefitStatuses !== undefined) {
            for (var i = 0; i < benefitStatuses.length; i++) {
                if (benefitStatuses[i].innerText == @((int)eBenefitStatus.InVeryfication)) {
                    $("#" + benefitStatuses[i].parentElement.id).css("color", "blue");
                }
                else if (benefitStatuses[i].innerText == @((int)eBenefitStatus.Accepted)) {
                    $("#" + benefitStatuses[i].parentElement.id).css("color", "green");
                }
                else if (benefitStatuses[i].innerText == @((int)eBenefitStatus.Rejected)) {
                    $("#" + benefitStatuses[i].parentElement.id).css("color", "red");
                }
            }
        }

        $("#benefitTable").DataTable({
            dom: '<"top"i>rt<"bottom"flp><"clear">',
            "scrollX": true,
            "autoWidth": true,
            searching: true,
            language: {
                info: "@Localizer["EntriesInfo"]",
                lengthMenu: "@Localizer["RecordsPerPage"]",
                paginate: {
                    previous: "@Localizer["Previous"]",
                    next: "@Localizer["Next"]",
                    zeroRecords: "@Localizer["NoResults"]"
                }
            }
        });

        $("#benefitTable_filter").hide();

        var table = $('#benefitTable').DataTable();
        $('#myInput').on( 'keyup', function () {
            table.search( this.value ).draw();
        } );

        $('#benefitTable tbody').on('click', 'tr', function () {
            if ($(this).hasClass('selected')) {
                $(this).removeClass('selected');
            }
            else {
                $("#benefitTable").DataTable().$('tr.selected').removeClass('selected');
                $(this).addClass('selected');
            }

            getButtonaAvailability()
        });
    });

    function getButtonaAvailability() {
        var benefitStatus = getBenefitStatusId();
        if ($("#benefitTable").DataTable().$('tr.selected').length == 0) {
            $('#showBenefit').attr("disabled", true);
            $('#editBenefit').attr("disabled", true);
            $('#deleteBenefit').attr("disabled", true);
            $('#verifyBenefit').attr("disabled", true);
            $('#acceptBenefit').attr("disabled", true);
            $('#rejectBenefit').attr("disabled", true);
        }
        else if (benefitStatus == @((int)eBenefitStatus.Passed)) {
            $('#showBenefit').attr("disabled", false);
            $('#editBenefit').attr("disabled", false);
            $('#deleteBenefit').attr("disabled", false);
            $('#verifyBenefit').attr("disabled", false);
            $('#acceptBenefit').attr("disabled", true);
            $('#rejectBenefit').attr("disabled", true);
        }
        else if (benefitStatus == @((int)eBenefitStatus.InVeryfication)) {
            $('#showBenefit').attr("disabled", false);
            $('#editBenefit').attr("disabled", true);
            $('#deleteBenefit').attr("disabled", true);
            $('#verifyBenefit').attr("disabled", true);
            $('#acceptBenefit').attr("disabled", false);
            $('#rejectBenefit').attr("disabled", false);
        }
        else if (benefitStatus == @((int)eBenefitStatus.Rejected) || benefitStatus == @((int)eBenefitStatus.Accepted)) {
            $('#showBenefit').attr("disabled", false);
            $('#editBenefit').attr("disabled", true);
            $('#deleteBenefit').attr("disabled", true);
            $('#verifyBenefit').attr("disabled", true);
            $('#acceptBenefit').attr("disabled", true);
            $('#rejectBenefit').attr("disabled", true);
        }
    }

    function getBenefitId() {
        var table = $("#benefitTable").DataTable();
        id = $.map(table.rows('.selected').data(), function (item) {
            return item[0]
        });
        return id[0];
    }

    function getBenefitStatusId() {
        var table = $("#benefitTable").DataTable();
        var id = $.map(table.rows('.selected').data(), function (item) {
            return item[1]
        });
        return id[0];
    }

    function getBenefitTypeId() {
        var table = $("#benefitTable").DataTable();
        var id = $.map(table.rows('.selected').data(), function (item) {
            return item[2]
        });
        return id[0];
    }

    function getBenefitNumber() {
        var table = $("#benefitTable").DataTable();
        var id = $.map(table.rows('.selected').data(), function (item) {
            return item[3]
        });
        return id[0];
    }

    $("#verifyBenefit").click(function () {
        $.ajax({
            url: '@Url.Action("VerifyBenefit", "Benefit")',
            type: 'POST',
            dataType: 'json',
            data: { id: getBenefitId(), benefitTypeId: getBenefitTypeId() },
            success: function (data) {
                if (data.success) {
                    alert("Wniosek przyjęty do weryfikacji");
                    location.reload();
                }
            },
            error: function () {
                alert('Wystąpił błąd podczas zmiany statusu wniosku! Skontaktuj się z administratorem!');
            }
        });
    });

    $("#acceptBenefit").click(function () {
        $.ajax({
            url: '@Url.Action("AcceptBenefit", "Benefit")',
            type: 'POST',
            dataType: 'json',
            data: { id: getBenefitId(), benefitTypeId: getBenefitTypeId() },
            success: function (data) {
                if (data.success) {
                    alert("Wniosek został zaakceptowany!");
                    location.reload();
                }
            },
            error: function () {
                alert('Wystąpił błąd podczas zmiany statusu wniosku! Skontaktuj się z administratorem!');
            }
        });
    });

    $('#rejectBenefit').click(function () {
        var url = $('#rejectionModal').data('url');
        $.get(url, function (data) {
            $("#rejectionModal").html(data);
            $("#rejectionModal").modal('show');
        });
    });

    $('#showBenefit').click(function () {
        $.ajax({
            url: '@Url.Action("Show", "Benefit")',
            type: 'POST',
            datatype: "json",
            data: { id: getBenefitId(), benefitTypeId: getBenefitTypeId() },
            success: function (data) {
                $("#showBenefitModal").html(data);
                $("#showBenefitModal").modal('show');
            },
            error: function () {
                alert('Wystąpił nieznamy błąd! Skontaktuj się z administratorem!');
            }
        });
    });

    $('#deleteBenefit').click(function () {
        var r = confirm("Na pewno usunąć wniosek " + getBenefitNumber() + "?");
        if (r) {
            $.ajax({
                url: '@Url.Action("Delete", "Benefit")',
                type: 'POST',
                datatype: "json",
                data: { id: getBenefitId(), benefitTypeId: getBenefitTypeId() },
                success: function (data) {
                    alert("Wniosek został usunięty!");
                    location.reload();
                },
                error: function () {
                    alert('Wystąpił nieznamy błąd! Skontaktuj się z administratorem!');
                }
            });
        };
    });

    $('#editBenefit').click(function () {
        window.location.href = "@Url.Action("Edit", "Benefit")?id=" + getBenefitId() + "&benefitTypeId=" + getBenefitTypeId();
    });
</script>
}
