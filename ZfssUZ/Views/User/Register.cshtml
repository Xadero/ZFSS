@model ZfssUZ.Models.Users.RegisterModel

@using Microsoft.AspNetCore.Identity
@using ZfssUZData.Models.Users
@using Microsoft.AspNetCore.Mvc.Localization
@using ZfssUZ.Enums

@inject UserManager<ApplicationUser> UserManager
@inject IViewLocalizer Localizer

@{
    object formLabel = new { style = "form-label" };
    object formControl = new { style = "form-control" };
    Context.Items["Title"] = Localizer["AddHomeLoanBenefitTitle"];
}

<h3>@Localizer["Title"]</h3>
<hr />
<script src="~/lib/jquery/dist/jquery.js"></script>
<script>
    if (@((int)UserManager.GetUserAsync(User).Result.UserGroupId) != @((int)eUserGroup.Administration)){
        alert("@Localizer["NotAuthorized"]");
        window.location = "@Url.Action("Index", "Home")";
    }
</script>
<div class="row">
    <div class="col-md-5">
        <form asp-action="Register">
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="form-group">
                @Html.LabelFor(x => x.Username, formLabel)
                @Html.TextBoxFor(x => x.Username, string.Empty, new { @class = formControl })
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.Firstname, formLabel)
                @Html.TextBoxFor(x => x.Firstname, string.Empty, new { @class = formControl })
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.LastName, formLabel)
                @Html.TextBoxFor(x => x.LastName, string.Empty, new { @class = formControl })
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.Password, formLabel)
                @Html.TextBoxFor(x => x.Password, string.Empty, new { @class = formControl, @type = "password" })
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.ConfirmPassword, formLabel)
                @Html.TextBoxFor(x => x.ConfirmPassword, string.Empty, new { @class = formControl, @type = "password" })
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.DateOfBirth, formLabel)
                <input type="date" asp-for="DateOfBirth" class="form-control" />
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.PhoneNumber, formLabel)
                @Html.TextBoxFor(x => x.PhoneNumber, string.Empty, new { @class = formControl, @type = "phone" })
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.EmailAddress, formLabel)
                @Html.TextBoxFor(x => x.EmailAddress, string.Empty, new { @class = formControl })
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.Address, formLabel)
                @Html.TextBoxFor(x => x.Address, string.Empty, new { @class = formControl })
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.PostCode, formLabel)
                @Html.TextBoxFor(x => x.PostCode, string.Empty, new { @class = formControl })
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.City, formLabel)
                @Html.TextBoxFor(x => x.City, string.Empty, new { @class = formControl })
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.UserGroup, formLabel)
                @Html.DropDownListFor(x => x.UserGroup.Id, Model.UserGroupList, new { @class = "form-control" })
            </div>
            <div class="form-group">
                <input type="submit" id="Save" value="@Localizer["Save"]" class="btn btn-default" onclick="validateOnRegister()" />
                <a asp-action="Index" id="Back" class="btn btn-default">@Localizer["Back"]</a>
            </div>
        </form>
    </div>
</div>
