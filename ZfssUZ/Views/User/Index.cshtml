@model ZfssUZ.Models.Users.UserListModel

@using Microsoft.AspNetCore.Identity
@using ZfssUZData.Models.Users
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Localization
@using ZfssUZ.Enums

@inject UserManager<ApplicationUser> UserManager
@inject IViewLocalizer Localizer

@{
    Context.Items["Title"] = Localizer["UserList"].Value;
}

<script src="~/lib/jquery/dist/jquery.js"></script>
<script src="https://cdn.datatables.net/1.10.15/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.10.15/js/dataTables.bootstrap4.min.js "></script>

<script>
    if (@((int)UserManager.GetUserAsync(User).Result.UserGroupId) != @((int)eUserGroup.Administration)){
        alert("@Localizer["NotAuthorized"]");
        window.location = "@Url.Action("Index", "Home")";
    }
</script>

<h3>@Localizer["UserList"]</h3>
<div class="modal fade" id="exampleModal" role="dialog" data-url='@Url.Action("Show", "User")'></div>
<div class="container">
    <div>
        <input class="form-control" id="myInput" type="text" style="width:50%;align-items:center" placeholder="@Localizer["Search"]">
        <br>
        <table class="table table-striped table-bordered dt-responsive nowrap" style="width:100%;" id="userIndexTable" cellspacing="0">
            <thead>
                <tr>
                    <th clss="th-sm" style="display:none">@Localizer["Username"]</th>
                    <th clss="th-sm">@Localizer["Fullname"]</th>
                    <th clss="th-sm"></th>
                    <th clss="th-sm"></th>
                    <th clss="th-sm"></th>
                    <th clss="th-sm"></th>
                </tr>
            </thead>
            <tbody id="myTable">
                @{int i = 0;}
                @foreach (var userList in Model.UserList)
                {
                    <tr id="userList@(i)">
                        <td name="username" style="display:none">@userList.Username</td>
                        <td><b>@userList.Firstname @userList.LastName</b></td>
                        <td><input type="submit" class="btn btn-default" id="showUserData" value="@Localizer["Show"]" onclick="showUser('@userList.Id.ToString()')" /></td>
                        <td>@Html.ActionLink(@Localizer["Edit"].Value, "Edit", "User", new { userId = userList.Id }, new { @class = "btn btn-default", @id = "editUser" })</td>
                        <td><input type="submit" class="btn btn-default" id="deleteUser@(i)" value="@Localizer["Delete"]" onclick="confirmDelete('@userList.Id.ToString()')" /></td>
                        @if (userList.IsLocked)
                        {
                            @using (Html.BeginForm("UnlockUser", "User", new { userId = userList.Id }, FormMethod.Post))
                            {
                                <td><input type="submit" name="unlockUser" class="btn btn-default" id="unlockUser" value="@Localizer["Unlock"]" /></td>
                            }
                        }
                        else
                        {
                            @using (Html.BeginForm("LockUser", "User", new { userId = userList.Id }, FormMethod.Post))
                            {
                                <td><input type="submit" class="btn btn-default" id="lockUser@(i)" value="@Localizer["Lock"]" onclick="selectLockedUser(userList@(i))" /></td>
                            }
                        }
                    </tr>
                    i++;
                }
            </tbody>
        </table>
    </div>
</div>
@section Scripts {
    <script>
    $(document).ready(function () {
        var userNames = document.getElementsByName("username");
        var loggedUser = "@UserManager.GetUserAsync(User).Result.UserName";
        for (var i = 0; i < userNames.length; i++) {
            if (userNames[i].innerHTML == loggedUser) {
                $("#lockUser" + i).prop("disabled", true);
                $("#deleteUser" + i).prop("disabled", true);
            }
        }

        var unlockButton = document.getElementsByName("unlockUser");
        if (unlockButton !== undefined) {
            for (var i = 0; i < unlockButton.length; i++)
                selectLockedUser(unlockButton[i].parentElement.parentElement.id);
        }

        $("#userIndexTable").DataTable({
            dom: '<"top"i>rt<"bottom"flp><"clear">',
            searching: true,
            language: {
                info: "@Localizer["EntriesInfo"]",
                lengthMenu: "@Localizer["RecordsPerPage"]",
                paginate: {
                    previous: "@Localizer["Previous"]",
                    next: "@Localizer["Next"]",
                    zeroRecords: "@Localizer["NoResults"]"
                }
            }
        });

        $("#userIndexTable_filter").hide();

        var table = $('#userIndexTable').DataTable();

        $('#myInput').on('keyup', function () {
            table.search( this.value ).draw();
        });

        $("#userIndexTable tbody").on("click", "tr", function () {
            if ($(this).hasClass("selected")) {
                $(this).removeClass("selected");
            }
            else {
                $("#userIndexTable").DataTable().$("tr.selected").removeClass("selected");
                $(this).addClass("selected");
            }
        });
    });

    function showUser(value) {
        $.ajax({
            url: '@Url.Action("Show", "User")',
            type: 'POST',
            datatype: "json",
            data: { userId: value },
            success: function (data) {
                $("#exampleModal").html(data);
                $("#exampleModal").modal("show");
            },
            error: function () {
                alert("@Localizer["ShowingError"]");
            }
        });
    }

    function selectLockedUser(rowIndex) {
        $("#" + rowIndex).css("background-color", "red");
    }

    function confirmDelete(value) {
        var r = confirm("@Localizer["WantToDeleteAccount"]");
        if (r) {
            $.ajax({
                url: '@Url.Action("DeleteUser", "User")',
                type: 'POST',
                dataType: 'json',
                data: { userId: value },
                success: function (data) {
                    if (data.success) {
                        alert("@Localizer["AccountDeleted"]");
                        location.reload();
                    }
                    else {
                        alert("@Localizer["DeletingError"]");
                    }
                },
                error: function () {
                    alert("@Localizer["DeletingError"]");
                }
            });
        }
    }
    </script>
}